stages:
  - build
  # - flushcache

build staging:
  stage: build
  before_script:
    - docker-compose -f app.docker-compose.yml run node yarn install --check-files
  variables:
    NODE_ENV: staging
  script:
    - cp .env.docker .env
    - docker-compose -f app.docker-compose.yml run node yarn nuxt generate
    - docker-compose down --remove-orphans --volumes
    - docker-compose up -d
    - docker-compose ps
  environment:
    name: staging
    url: https://staging-digital.astoundlab.com
  tags:
    - digital
    - staging
  only:
    - main

build production:
  stage: build
  before_script:
    - docker-compose -f app.docker-compose.yml run node yarn install --check-files
  variables:
    NODE_ENV: production
  script:
    - docker-compose -f app.docker-compose.yml run node yarn nuxt generate
    - docker-compose down --remove-orphans --volumes
    - docker-compose up -d
    - docker-compose ps
  environment:
    name: production
    url: https://digital.astoundgroup.com
  tags:
    - digital
    - production
  only:
    - main
  when: manual
# flushcache:
#   image: docker:stable
#   stage: flushcache
#   tags:
#     - digital
#     - flushcache
#   before_script:
#     - apk add --update curl && rm -rf /var/cache/apk/*
#   script:
#     - |
#       curl --fail --output "/dev/null" --silent --show-error -X POST "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/purge_cache" \
#       -H "Authorization: Bearer $CF_CACHE_API_TOKEN" -H "Content-Type: application/json" \
#       --data '{"purge_everything":true}'
